name: bundle

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: "app/licsss-component-v1"

    permissions:
      contents: write

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TZ: "Asia/Tokyo"
      GH_REPO: "https://api.github.com/repos/${{ github.repository }}"
      NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: main # 手動実行時のブランチを指定しておく

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: "app/licsss-component-v1/package-lock.json"
          registry-url: "https://registry.npmjs.org"
          scope: "@licsss"
          always-auth: true

      - run: |
          npm ci
          npm run build
          npm run build-storybook

      - name: output
        run: |
          echo "zipping"
          zip dist.zip -r dist
          zip storybook.zip -r storybook-static
          echo "zipped"

      # タグを生成する 「{YYYY.MM.DD}-{当日リリース回数}」
      - name: Generate release tag
        id: release_tag
        run: |
          today=$(date +'%Y.%m.%d.%H.%M.%S')
          echo "release_tag=$today" >> $GITHUB_OUTPUT

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_tag.outputs.release_tag }}
          release_name: ${{ steps.release_tag.outputs.release_tag }}
          draft: false
          prerelease: false

      - run: ls

      - name: Upload artifact dist
        uses: actions/upload-artifact@v3
        with:
          name: "licsssComponent-${{ steps.release_tag.outputs.release_tag }}"
          path: ./app/licsss-component-v1/dist.zip

      - name: Upload artifact storybook
        uses: actions/upload-artifact@v3
        with:
          name: "licsssComponent-${{ steps.release_tag.outputs.release_tag }}"
          path: ./app/licsss-component-v1/storybook.zip

      - name: Upload Release Asset dist
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/licsss-component-v1/dist.zip
          asset_name: build.zip
          asset_content_type: application/zip

      - name: Upload Release Asset storybook
        id: upload-release-asset-storybook
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/licsss-component-v1/storybook.zip
          asset_name: storybook.zip
          asset_content_type: application/zip

      - name: publish
        continue-on-error: true
        if: ${{ always() }}
        run: npm publish

      - name: deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          port: ${{ secrets.FTP_PORT }}
          local-dir: ./app/licsss-component-v1/storybook-static/
          server-dir: ./storybook/
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.github/**
            **/docs/**
            **/src/**
            .gitignore
            Dockerfile
            ReadMe.md
            docker-compose.yml
            **/.cache/**
            **/.storybook/**
            **/dist/**
            **/public/**
            **/src/**
            **/static/**
            **/.babelrc
            **/.gitignore
            **/.npmignore
            **/README.md
            **/package*
            **/*config*
            *.zip
      - if: ${{ always() }}
        run: echo "finished"
